{"ast":null,"code":"var _jsxFileName = \"/home/jasonw/Desktop/React/bugtracker/src/components/projects/projectlist.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\"; //import jwt from 'jsonwebtokens'\n\nconst Project = props => React.createElement(\"tr\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 9\n  },\n  __self: this\n}, React.createElement(\"td\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10\n  },\n  __self: this\n}, props.project.projectName), React.createElement(\"td\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11\n  },\n  __self: this\n}, props.project.description), React.createElement(\"td\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12\n  },\n  __self: this\n}, props.project.members), React.createElement(\"td\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13\n  },\n  __self: this\n}, props.date.substring(0, 10)), React.createElement(\"td\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14\n  },\n  __self: this\n}, props.bugsProject), React.createElement(\"td\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16\n  },\n  __self: this\n}, React.createElement(Link, {\n  to: \"/editProj/\" + props.project._id,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17\n  },\n  __self: this\n}, \"Edit \"), \" | \", React.createElement(Link, {\n  to: \"/projects/bugs/\" + props.project._id,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17\n  },\n  __self: this\n}, \"Add bug \"), \" | \", React.createElement(Link, {\n  to: \"/bugs/\" + props.project._id,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17\n  },\n  __self: this\n}, \" View Bugs\")));\n\nexport default class Projects extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onSort = sortType => {\n      this.setState({\n        sortType: 'desc'\n      });\n    };\n\n    this.state = {\n      projects: [],\n      query: '',\n      sortType: 'asc'\n    };\n    this.searchQuery = this.searchQuery.bind(this);\n    this.onSort = this.onSort.bind(this);\n  }\n\n  componentDidMount() {\n    axios.get('http://localhost:4000/projects').then(response => {\n      this.setState({\n        projects: response.data\n      });\n      console.log(\"Projects Mount here\" + JSON.stringify(response.data));\n    }).catch(function (error) {\n      console.log(\"error \" + error);\n    });\n  }\n\n  searchQuery(e) {\n    this.setState({\n      query: e.target.value\n    });\n  }\n\n  // onSort = (sortType) => {\n  //     this.state.projects.sort((a,b) => {\n  //         const isRev = (this.state.sortType === 'asc') ? 1 : -1;\n  //         return isRev * a.projectName.localeCompare(b.projectName)\n  //     })\n  // } \n  render() {\n    // const { user } = this.props.auth;\n    // console.log(\"Auth here\" + JSON.stringify(user));\n    // let toastMsg = document.createElement('toastMsg');\n    // toastMsg.className()\n    console.log(\"Data here\", this.state.projects);\n    const sorted = this.state.projects.sort((a, b) => {\n      const isReversed = this.state.sortType === 'asc' ? 1 : -1;\n      return isReversed * a.projectName.localeCompare(b.projectName);\n    }); //Search query for project list items\n\n    let findQuery = sorted.filter(i => i.description.toLowerCase().indexOf(this.state.query.toLowerCase()) !== -1);\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \" Projects \"), React.createElement(\"input\", {\n      onChange: this.searchQuery,\n      type: \"text\",\n      placeholder: \"Search projects...\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }), React.createElement(\"table\", {\n      className: \"table\",\n      style: {\n        marginTop: 20\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      onClick: () => this.onSort('desc'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"Project Name\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \"Description\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"Members\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \"Date Created\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"Actions\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, findQuery.map(currentProject => {\n      return React.createElement(Project, {\n        project: currentProject,\n        bugsProject: currentProject.bugs_id,\n        key: currentProject._id,\n        date: currentProject.dateCreated,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      });\n    }))));\n  }\n\n}","map":{"version":3,"sources":["/home/jasonw/Desktop/React/bugtracker/src/components/projects/projectlist.js"],"names":["React","Component","Link","axios","connect","PropTypes","Project","props","project","projectName","description","members","date","substring","bugsProject","_id","Projects","constructor","onSort","sortType","setState","state","projects","query","searchQuery","bind","componentDidMount","get","then","response","data","console","log","JSON","stringify","catch","error","e","target","value","render","sorted","sort","a","b","isReversed","localeCompare","findQuery","filter","i","toLowerCase","indexOf","marginTop","map","currentProject","bugs_id","dateCreated"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n//import jwt from 'jsonwebtokens'\n\nconst Project = props => (\n    <tr>\n    <td>{props.project.projectName}</td>\n        <td >{props.project.description}</td>\n        <td >{props.project.members}</td>\n        <td >{props.date.substring(0,10)}</td>\n        <td>{props.bugsProject}</td>\n        \n        <td>\n        <Link to={\"/editProj/\"+props.project._id} >Edit </Link> | <Link to={\"/projects/bugs/\"+props.project._id}>Add bug </Link> | <Link to={\"/bugs/\"+props.project._id}> View Bugs</Link>\n        \n        </td>\n        \n    </tr>\n)\nexport default class Projects extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            projects: [],\n            query: '',\n            sortType: 'asc'\n        };\n\n        this.searchQuery = this.searchQuery.bind(this);\n        \n        this.onSort = this.onSort.bind(this);\n    }\n    componentDidMount() {\n        axios.get('http://localhost:4000/projects')\n            .then(response => {\n                this.setState({\n                    projects: response.data});\n                    console.log(\"Projects Mount here\" + JSON.stringify(response.data));\n            })\n            .catch(function(error) {\n                console.log(\"error \" + error)\n            })\n\n    }\n\n    searchQuery(e) {\n        this.setState({\n            query: e.target.value\n        })\n    }\n\n\n    onSort = (sortType) => {\n        this.setState({\n            sortType: 'desc'\n        })\n    }\n\n    // onSort = (sortType) => {\n    //     this.state.projects.sort((a,b) => {\n    //         const isRev = (this.state.sortType === 'asc') ? 1 : -1;\n    //         return isRev * a.projectName.localeCompare(b.projectName)\n    //     })\n    // } \n    \n    render() {\n\n        // const { user } = this.props.auth;\n        // console.log(\"Auth here\" + JSON.stringify(user));\n\n        // let toastMsg = document.createElement('toastMsg');\n        // toastMsg.className()\n\n        console.log(\"Data here\", this.state.projects);\n\n        const sorted = this.state.projects.sort((a,b) => {\n\n            const isReversed = (this.state.sortType === 'asc') ? 1 : -1;\n            return isReversed * a.projectName.localeCompare(b.projectName)\n        });\n\n\n        //Search query for project list items\n        let findQuery = sorted.filter(\n                i => i.description.toLowerCase().indexOf(this.state.query.toLowerCase()) !== -1);\n                \n        return (\n            <div className=\"container\">\n                <h3> Projects </h3>\n                <input\n                    onChange={this.searchQuery}\n                    type=\"text\"\n                    placeholder=\"Search projects...\"\n                />\n                <table className=\"table\"\n                    style={{marginTop: 20 }}>\n                        <thead>\n                            <tr>\n                                <th onClick={()=>this.onSort('desc')}>Project Name</th>   \n                                <th>Description</th>\n                                <th>Members</th>\n                                <th>Date Created</th>\n                                <th>Actions</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {findQuery.map((currentProject) =>{\n                                return <Project project={currentProject}\n                                            bugsProject={currentProject.bugs_id}\n                                            key={currentProject._id}\n                                            date={currentProject.dateCreated}\n                            />\n                })}\n                        </tbody>\n\n                    </table>\n            </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}