{"ast":null,"code":"var _jsxFileName = \"/home/jasonw/Desktop/React/bugtracker/src/components/projects/projectlist.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios'; //import jwt from 'jsonwebtokens'\n\nconst Project = props => React.createElement(\"tr\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7\n  },\n  __self: this\n}, React.createElement(\"td\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 8\n  },\n  __self: this\n}, props.project.projectName), React.createElement(\"td\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 9\n  },\n  __self: this\n}, props.project.description), React.createElement(\"td\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10\n  },\n  __self: this\n}, props.project.members), React.createElement(\"td\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11\n  },\n  __self: this\n}, props.date), React.createElement(\"td\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13\n  },\n  __self: this\n}, React.createElement(Link, {\n  to: \"/editProj/\" + props.project._id,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14\n  },\n  __self: this\n}, \"Edit \"), \" | \", React.createElement(\"a\", {\n  href: \"#\",\n  onClick: () => {\n    props.deleteProject(props.project._id);\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14\n  },\n  __self: this\n}, \" delete\")));\n\nexport default class Projects extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      projects: [],\n      query: '',\n      sortType: 'asc'\n    };\n    this.searchQuery = this.searchQuery.bind(this);\n    this.deleteProject = this.deleteProject.bind(this);\n    this.onSort = this.onSort.bind(this);\n  }\n\n  componentDidMount() {\n    axios.get('http://localhost:4000/projects/projectsList').then(response => {\n      this.setState({\n        projects: response.data\n      });\n      console.log(\"Did Mount here\" + response.data);\n    }).catch(function (error) {\n      console.log(\"error \" + error);\n    });\n  } //     componentDidUpdate() {\n  //         axios.get('http://localhost:4000/projects/projectsList')\n  //         .then(response => {\n  //             this.setState({\n  //                 projects: response.data});\n  //                 //console.log(\"Did Update done\" + response.data)\n  //         })\n  //         .catch(function(error) {\n  //             console.log(error)\n  //         })\n  // }\n\n\n  searchQuery(e) {\n    this.setState({\n      query: e.target.value\n    });\n  }\n\n  deleteProject(id) {\n    axios.delete('http://localhost:4000/projects/' + id).then(response => {\n      console.log(response.data);\n    });\n    this.setState({\n      projects: this.state.projects.filter(el => el._id !== id)\n    });\n  } // onSort = sortType => {\n  //     this.setState({\n  //         sortType\n  //     })\n  // }\n  // onSort = (sortType) => {\n  //     this.state.projects.sort((a,b) => {\n  //         const isRev = (this.state.sortType === 'asc') ? 1 : -1;\n  //         isRev * a.projectName.localeCompare(b.projectName)\n  //     })\n  // } \n  // projectList() {\n  //     return this.state.projects.map((currentProject) =>{\n  //         return <Project project={currentProject}\n  //                     //deleteBug={this.deleteBug}\n  //                     key={currentProject._id}\n  //                     date={currentProject.dateCreated.substring(0,10)}\n  //                     />\n  //     });\n  // }\n\n\n  render() {\n    let findQuery = this.state.projects.filter(i => i.description.toLowerCase().indexOf(this.state.query.toLowerCase()) !== -1); // const sorted = this.state.projects.sort((a,b) => {\n    //             const isReversed = (this.state.sortType === 'asc') ? 1 : -1;\n    //             return isReversed * a.projectName.localeCompare(b.projectName)\n    //         });\n\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \" Projects \"), React.createElement(\"input\", {\n      onChange: this.searchQuery,\n      type: \"text\",\n      placeholder: \"Search projects...\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }), React.createElement(\"table\", {\n      className: \"table table-striped\",\n      style: {\n        marginTop: 20\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      onClick: () => this.onSort('desc'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, \"Project Name\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, \"Description\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, \"Members\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, \"Date Created\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, \"Actions\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, findQuery.map(currentProject => {\n      return React.createElement(Project, {\n        project: currentProject,\n        deleteProject: this.deleleProject,\n        key: currentProject._id,\n        date: currentProject.dateCreated.substring(0, 10),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      });\n    }))));\n  }\n\n}","map":{"version":3,"sources":["/home/jasonw/Desktop/React/bugtracker/src/components/projects/projectlist.js"],"names":["React","Component","Link","axios","Project","props","project","projectName","description","members","date","_id","deleteProject","Projects","constructor","state","projects","query","sortType","searchQuery","bind","onSort","componentDidMount","get","then","response","setState","data","console","log","catch","error","e","target","value","id","delete","filter","el","render","findQuery","i","toLowerCase","indexOf","marginTop","map","currentProject","deleleProject","dateCreated","substring"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\n//import jwt from 'jsonwebtokens'\n\nconst Project = props => (\n    <tr>\n    <td>{props.project.projectName}</td>\n        <td >{props.project.description}</td>\n        <td >{props.project.members}</td>\n        <td >{props.date}</td>\n        \n        <td>\n        <Link to={\"/editProj/\"+props.project._id} >Edit </Link> | <a href=\"#\" onClick={() => { props.deleteProject(props.project._id) }}> delete</a>\n        </td>\n        \n    </tr>\n)\nexport default class Projects extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            projects: [],\n            query: '',\n            sortType: 'asc'\n        };\n\n        this.searchQuery = this.searchQuery.bind(this);\n        this.deleteProject = this.deleteProject.bind(this);\n        this.onSort = this.onSort.bind(this);\n    }\n    componentDidMount() {\n        axios.get('http://localhost:4000/projects/projectsList')\n            .then(response => {\n                this.setState({\n                    projects: response.data});\n                    console.log(\"Did Mount here\" + response.data)\n            })\n            .catch(function(error) {\n                console.log(\"error \" + error)\n            })\n\n    }\n\n//     componentDidUpdate() {\n//         axios.get('http://localhost:4000/projects/projectsList')\n//         .then(response => {\n//             this.setState({\n//                 projects: response.data});\n//                 //console.log(\"Did Update done\" + response.data)\n                \n//         })\n//         .catch(function(error) {\n//             console.log(error)\n\n//         })\n\n// }\n\n    searchQuery(e) {\n        this.setState({\n            query: e.target.value\n        })\n    }\n\n    deleteProject(id) {\n        axios.delete('http://localhost:4000/projects/'+id) \n            .then(response => {console.log(response.data)});\n\n        this.setState({\n            projects: this.state.projects.filter(el => el._id !== id)\n        })\n    }\n\n    // onSort = sortType => {\n    //     this.setState({\n    //         sortType\n    //     })\n    // }\n\n    // onSort = (sortType) => {\n    //     this.state.projects.sort((a,b) => {\n    //         const isRev = (this.state.sortType === 'asc') ? 1 : -1;\n    //         isRev * a.projectName.localeCompare(b.projectName)\n    //     })\n    // } \n\n    // projectList() {\n    //     return this.state.projects.map((currentProject) =>{\n\n    //         return <Project project={currentProject}\n    //                     //deleteBug={this.deleteBug}\n    //                     key={currentProject._id}\n    //                     date={currentProject.dateCreated.substring(0,10)}\n    //                     />\n    //     });\n    // }\n    \n    render() {\n\n        let findQuery = this.state.projects.filter(\n                i => i.description.toLowerCase().indexOf(this.state.query.toLowerCase()) !== -1);\n                \n        // const sorted = this.state.projects.sort((a,b) => {\n\n        //             const isReversed = (this.state.sortType === 'asc') ? 1 : -1;\n        \n        //             return isReversed * a.projectName.localeCompare(b.projectName)\n        //         });\n        \n        return (\n            <div className=\"container\">\n                <h3> Projects </h3>\n                <input\n                    onChange={this.searchQuery}\n                    type=\"text\"\n                    placeholder=\"Search projects...\"\n                />\n                <table className=\"table table-striped\"\n                    style={{marginTop: 20 }}>\n                        <thead>\n                            <tr>\n                                <th onClick={()=>this.onSort('desc')}>Project Name</th>   \n                                <th>Description</th>\n                                <th>Members</th>\n                                <th>Date Created</th>\n                                <th>Actions</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {findQuery.map((currentProject) =>{\n                                return <Project project={currentProject}\n                                            deleteProject={this.deleleProject}\n                                            key={currentProject._id}\n                                            date={currentProject.dateCreated.substring(0,10)}\n                            />\n                })}\n                        </tbody>\n\n                    </table>\n            </div>\n        )\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}