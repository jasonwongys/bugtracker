{"ast":null,"code":"import _defineProperty from\"/home/jasonw/Desktop/React/bugtracker/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _classCallCheck from\"/home/jasonw/Desktop/React/bugtracker/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/jasonw/Desktop/React/bugtracker/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/home/jasonw/Desktop/React/bugtracker/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/home/jasonw/Desktop/React/bugtracker/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/home/jasonw/Desktop/React/bugtracker/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from\"react\";import{Link,withRouter}from\"react-router-dom\";import{connect}from\"react-redux\";import{registerUser}from\"../../actions/authActions\";import classnames from\"classnames\";import axios from\"axios\";var Register=/*#__PURE__*/function(_Component){_inherits(Register,_Component);function Register(){var _this;_classCallCheck(this,Register);_this=_possibleConstructorReturn(this,_getPrototypeOf(Register).call(this));_this.onChange=function(e){_this.setState(_defineProperty({},e.target.id,e.target.value));};_this.onSubmit=function(e){e.preventDefault();var newUser={name:_this.state.name,email:_this.state.email,password:_this.state.password,password2:_this.state.password2};axios.post('http://localhost:4000/api/users/register',newUser).then(function(response){return console.log(response.data);},_this.props.registerUser(newUser,_this.props.history));_this.setState({name:'',email:'',password:''});};_this.state={name:\"\",email:\"\",password:\"\",password2:\"\",errors:{}};return _this;}_createClass(Register,[{key:\"componentDidMount\",value:function componentDidMount(){// If logged in and user navigates to Register page, should redirect them to dashboard\nif(this.props.auth.isAuthenticated){this.props.history.push(\"/dashboard\");}}},{key:\"componentWillReceiveProps\",value:function componentWillReceiveProps(nextProps){if(nextProps.errors){this.setState({errors:nextProps.errors});}}},{key:\"render\",value:function render(){var errors=this.state.errors;return React.createElement(\"div\",{className:\"container-fluid\"},React.createElement(Link,{to:\"/login\"},React.createElement(\"i\",{class:\"fas fa-backspace\"}),\" Back to Login\"),React.createElement(\"div\",{className:\"form-group\",style:{paddingLeft:\"11.250px\"}},React.createElement(\"h4\",null,React.createElement(\"b\",null,\"Register\"),\" below\"),React.createElement(\"p\",{className:\"grey-text text-darken-1\"},\"Already have an account? \",React.createElement(Link,{to:\"/login\"},\"Log in\"))),React.createElement(\"form\",{noValidate:true,onSubmit:this.onSubmit},React.createElement(\"div\",{className:\"form-group\"},React.createElement(\"label\",{htmlFor:\"name\"},\"Name\"),React.createElement(\"input\",{onChange:this.onChange,value:this.state.name,error:errors.name,id:\"name\",type:\"text\",className:classnames(\"\",{invalid:errors.name})}),React.createElement(\"span\",{className:\"red-text\"},errors.name)),React.createElement(\"div\",{className:\"form-group \"},React.createElement(\"label\",{htmlFor:\"email\"},\"Email\"),React.createElement(\"input\",{onChange:this.onChange,value:this.state.email,error:errors.email,id:\"email\",type:\"email\",className:classnames(\"\",{invalid:errors.email})}),React.createElement(\"span\",{className:\"red-text\"},errors.email)),React.createElement(\"div\",{className:\"form-group\"},React.createElement(\"label\",{htmlFor:\"password\"},\"Password\"),React.createElement(\"input\",{onChange:this.onChange,value:this.state.password,error:errors.password,id:\"password\",type:\"password\",className:classnames(\"\",{invalid:errors.password})}),React.createElement(\"span\",{className:\"red-text\"},errors.password)),React.createElement(\"div\",{className:\"form-group\"},React.createElement(\"label\",{htmlFor:\"password2\"},\"Confirm Password\"),React.createElement(\"input\",{onChange:this.onChange,value:this.state.password2,error:errors.password2,id:\"password2\",type:\"password\",className:classnames(\"\",{invalid:errors.password2})}),React.createElement(\"span\",{className:\"red-text\"},errors.password2)),React.createElement(\"div\",{className:\"form-group\",style:{paddingLeft:\"11.250px\"}},React.createElement(\"button\",{style:{width:\"150px\",borderRadius:\"3px\",letterSpacing:\"1.5px\",marginTop:\"1rem\"},type:\"submit\",className:\"btn btn-primary\"},\"Sign up \"))));}}]);return Register;}(Component);var mapStateToProps=function mapStateToProps(state){return{auth:state.auth,errors:state.errors};};export default connect(mapStateToProps,{registerUser:registerUser})(withRouter(Register));","map":{"version":3,"sources":["/home/jasonw/Desktop/React/bugtracker/client/src/components/auth/Register.js"],"names":["React","Component","Link","withRouter","connect","registerUser","classnames","axios","Register","onChange","e","setState","target","id","value","onSubmit","preventDefault","newUser","name","state","email","password","password2","post","then","response","console","log","data","props","history","errors","auth","isAuthenticated","push","nextProps","paddingLeft","invalid","width","borderRadius","letterSpacing","marginTop","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { registerUser } from \"../../actions/authActions\";\nimport classnames from \"classnames\";\nimport axios from \"axios\";\nclass Register extends Component {\n    constructor() {\n        super();\n        this.state = {\n        name: \"\",\n        email: \"\",\n        password: \"\",\n        password2: \"\",\n        errors: {}\n        };\n    }\n\n    componentDidMount() {\n        // If logged in and user navigates to Register page, should redirect them to dashboard\n        if (this.props.auth.isAuthenticated) {\n            this.props.history.push(\"/dashboard\");\n        }\n    }\n\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.errors) {\n            this.setState({\n                errors: nextProps.errors\n            });\n            }\n        }\n\n        \n    onChange = e => {\n        this.setState({ \n            [e.target.id]: e.target.value\n        });\n    };\n    onSubmit = e => {\n        e.preventDefault();\n\n\n    const newUser = {\n        name: this.state.name,\n        email: this.state.email,\n        password: this.state.password,\n        password2: this.state.password2\n        };\n\n    \n        axios.post('http://localhost:4000/api/users/register',newUser)\n            .then(response => console.log(response.data),\n            this.props.registerUser(newUser, this.props.history));\n\n        this.setState({\n            name: '',\n            email: '',\n            password: ''\n        })\n\n    \n    };\n\n    render() {\n        const { errors } = this.state;\n            return (\n                <div className=\"container-fluid\">\n                        <Link to=\"/login\">\n                            <i class=\"fas fa-backspace\"></i> Back to Login\n                        </Link>\n                        <div className=\"form-group\" style={{ paddingLeft: \"11.250px\" }}>\n                        <h4>\n                            <b>Register</b> below\n                        </h4>\n                        <p className=\"grey-text text-darken-1\">\n                            Already have an account? <Link to=\"/login\">Log in</Link>\n                        </p>\n                        </div>\n                        <form noValidate onSubmit={this.onSubmit}>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"name\">Name</label>\n                                <input\n                                    onChange={this.onChange}\n                                    value={this.state.name}\n                                    error={errors.name}\n                                    id=\"name\"\n                                    type=\"text\"\n                                    className={classnames(\"\", {\n                                    invalid: errors.name\n                                })}\n                                />\n                            \n                            <span className=\"red-text\">{errors.name}</span>\n                        </div>\n                        <div className=\"form-group \">\n                        <label htmlFor=\"email\">Email</label>\n                            <input\n                                onChange={this.onChange}\n                                value={this.state.email}\n                                error={errors.email}\n                                id=\"email\"\n                                type=\"email\"\n                                className={classnames(\"\", {\n                                    invalid: errors.email\n                            })}\n                            />\n                            \n                            <span className=\"red-text\">{errors.email}</span>\n                        </div>\n                        <div className=\"form-group\">\n                        <label htmlFor=\"password\">Password</label>\n                            <input\n                            onChange={this.onChange}\n                            value={this.state.password}\n                            error={errors.password}\n                            id=\"password\"\n                            type=\"password\"\n                            className={classnames(\"\", {\n                                invalid: errors.password\n                            })}\n                            />\n                            \n                            <span className=\"red-text\">{errors.password}</span>\n                        </div>\n                        <div className=\"form-group\">\n                        <label htmlFor=\"password2\">Confirm Password</label>\n                            <input\n                            onChange={this.onChange}\n                            value={this.state.password2}\n                            error={errors.password2}\n                            id=\"password2\"\n                            type=\"password\"\n                            className={classnames(\"\", {\n                                invalid: errors.password2\n                            })}\n                            />\n                            \n                            <span className=\"red-text\">{errors.password2}</span>\n                        </div>\n                        <div className=\"form-group\" style={{ paddingLeft: \"11.250px\" }}>\n                            <button\n                                style={{\n                                    width: \"150px\",\n                                    borderRadius: \"3px\",\n                                    letterSpacing: \"1.5px\",\n                                    marginTop: \"1rem\"\n                                }}\n                            type=\"submit\"\n                            className=\"btn btn-primary\"\n                            >Sign up </button>\n                            \n                        </div>\n                        </form>\n                    </div>\n        \n                \n                );\n            }\n        }\n\nRegister.propTypes = {\n        registerUser: PropTypes.func.isRequired,\n        auth: PropTypes.object.isRequired,\n        errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n        auth: state.auth,\n        errors: state.errors\n});\n\n\n\nexport default connect(\n        mapStateToProps,\n        { registerUser }\n)(withRouter(Register));\n"]},"metadata":{},"sourceType":"module"}