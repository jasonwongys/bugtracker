{"ast":null,"code":"var _jsxFileName = \"/home/jasonw/Desktop/React/bugtracker/src/components/bugtrack/search.component.js\";\nimport React, { Component } from 'react';\nexport default class Search extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      filtered: []\n    };\n    this.onChangeSearch = this.onChangeSearch.bind(this);\n  }\n\n  onChangeSearch(e) {\n    let currentList = [];\n    let newList = [];\n\n    if (e.target.value !== \"\") {\n      currentList = this.props.items;\n      newList = currentList.filter(item => {\n        const lc = item.toLowerCase();\n        const filter = e.target.value.toLowerCase();\n        return lc.includes(filter);\n      });\n    } else {\n      newList = this.props.items;\n    }\n\n    this.setState({\n      filtered: newList\n    });\n  }\n\n  componentDidMount() {\n    this.setState({\n      filtered: this.props.items\n    });\n  }\n\n  componentDidUpdate(nextProps) {\n    this.setState({\n      filtered: nextProps.items\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"search-label\",\n      htmlFor: \"search-input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      className: \"input\",\n      placeholder: \"search\",\n      value: this.state.filtered,\n      onChange: this.onChangeSearch,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    })), this.state.filtered.map(item => React.createElement(\"li\", {\n      key: item,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, item, \" \\xA0\")));\n  }\n\n}","map":{"version":3,"sources":["/home/jasonw/Desktop/React/bugtracker/src/components/bugtrack/search.component.js"],"names":["React","Component","Search","constructor","props","state","filtered","onChangeSearch","bind","e","currentList","newList","target","value","items","filter","item","lc","toLowerCase","includes","setState","componentDidMount","componentDidUpdate","nextProps","render","map"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,eAAe,MAAMC,MAAN,SAAqBD,SAArB,CAA+B;AAE1CE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AAETC,MAAAA,QAAQ,EAAE;AAFD,KAAb;AAMA,SAAKC,cAAL,GAAsB,KAAKA,cAAL,CAAoBC,IAApB,CAAyB,IAAzB,CAAtB;AACH;;AAGDD,EAAAA,cAAc,CAACE,CAAD,EAAI;AAEd,QAAIC,WAAW,GAAG,EAAlB;AAEA,QAAIC,OAAO,GAAG,EAAd;;AAEA,QAAGF,CAAC,CAACG,MAAF,CAASC,KAAT,KAAmB,EAAtB,EAA0B;AACtBH,MAAAA,WAAW,GAAG,KAAKN,KAAL,CAAWU,KAAzB;AAEAH,MAAAA,OAAO,GAAGD,WAAW,CAACK,MAAZ,CAAmBC,IAAI,IAAI;AACjC,cAAMC,EAAE,GAAGD,IAAI,CAACE,WAAL,EAAX;AACA,cAAMH,MAAM,GAAGN,CAAC,CAACG,MAAF,CAASC,KAAT,CAAeK,WAAf,EAAf;AAEA,eAAOD,EAAE,CAACE,QAAH,CAAYJ,MAAZ,CAAP;AACH,OALS,CAAV;AAMH,KATD,MASO;AACHJ,MAAAA,OAAO,GAAG,KAAKP,KAAL,CAAWU,KAArB;AACH;;AACG,SAAKM,QAAL,CAAc;AACVd,MAAAA,QAAQ,EAAEK;AADA,KAAd;AAGP;;AAEDU,EAAAA,iBAAiB,GAAG;AAChB,SAAKD,QAAL,CAAc;AACVd,MAAAA,QAAQ,EAAE,KAAKF,KAAL,CAAWU;AADX,KAAd;AAGH;;AAEDQ,EAAAA,kBAAkB,CAACC,SAAD,EAAY;AAC1B,SAAKH,QAAL,CAAc;AACVd,MAAAA,QAAQ,EAAEiB,SAAS,CAACT;AADV,KAAd;AAGH;;AAEDU,EAAAA,MAAM,GAAG;AAGL,WACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,SAAS,EAAC,cAAjB;AAAgC,MAAA,OAAO,EAAC,cAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI;AACI,MAAA,IAAI,EAAC,MADT;AAEI,MAAA,SAAS,EAAC,OAFd;AAGI,MAAA,WAAW,EAAC,QAHhB;AAII,MAAA,KAAK,EAAE,KAAKnB,KAAL,CAAWC,QAJtB;AAKI,MAAA,QAAQ,EAAE,KAAKC,cALnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ,EAcK,KAAKF,KAAL,CAAWC,QAAX,CAAoBmB,GAApB,CAAwBT,IAAI,IACzB;AAAI,MAAA,GAAG,EAAEA,IAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKA,IADL,UADH,CAdL,CADJ;AAsBH;;AA3EyC","sourcesContent":["import React, { Component } from 'react'\nexport default class Search extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            \n            filtered: [],\n\n        }\n\n        this.onChangeSearch = this.onChangeSearch.bind(this);\n    }\n\n\n    onChangeSearch(e) {\n\n        let currentList = [];\n\n        let newList = [];\n\n        if(e.target.value !== \"\") {\n            currentList = this.props.items;\n\n            newList = currentList.filter(item => {\n                const lc = item.toLowerCase();\n                const filter = e.target.value.toLowerCase();\n\n                return lc.includes(filter);\n            });\n        } else {\n            newList = this.props.items;\n        }\n            this.setState({\n                filtered: newList\n            })\n    }\n\n    componentDidMount() {\n        this.setState({\n            filtered: this.props.items\n        })\n    }\n\n    componentDidUpdate(nextProps) {\n        this.setState({\n            filtered: nextProps.items\n        })\n    }\n\n    render() {\n\n        \n        return (\n            <div className=\"container\">\n                <label className=\"search-label\" htmlFor=\"search-input\">\n\n                    <input\n                        type=\"text\"\n                        className=\"input\"\n                        placeholder=\"search\"\n                        value={this.state.filtered}\n                        onChange={this.onChangeSearch}\n\n                    />\n\n                </label>\n\n                {this.state.filtered.map(item => (\n                    <li key={item} >\n                        {item} &nbsp;\n                    </li>\n                ))}\n            </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}