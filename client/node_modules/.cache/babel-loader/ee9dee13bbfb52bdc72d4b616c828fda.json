{"ast":null,"code":"var _jsxFileName = \"/home/jasonw/Desktop/React/bugtracker/src/components/bugtrack/buglist.component.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport \"../bugtrack/bugs.css\";\nimport jwt_decode from \"jwt-decode\";\nimport setAuthToken from \"../../utils/setAuthToken\";\nimport { setCurrentUser, logoutUser } from \"../../actions/authActions\";\nimport store from \"../../store\";\n\nif (localStorage.jwtToken) {\n  // Set auth token header auth\n  const token = localStorage.jwtToken;\n  setAuthToken(token); // Decode token and get user info and exp\n\n  const decoded = jwt_decode(token); // Set user and isAuthenticated\n\n  store.dispatch(setCurrentUser(decoded)); // Check for expired token\n\n  const currentTime = Date.now() / 1000; // to get in milliseconds\n\n  if (decoded.exp < currentTime) {\n    // Logout user\n    store.dispatch(logoutUser()); // Redirect to login\n\n    window.location.href = \"/login\";\n  }\n}\n\nconst Bug = props => React.createElement(\"tr\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 30\n  },\n  __self: this\n}, props.projectName, React.createElement(\"td\", {\n  className: props.bug.completed ? 'completed' : '',\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 33\n  },\n  __self: this\n}, props.bug.description), React.createElement(\"td\", {\n  className: props.bug.completed ? 'completed' : '',\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 34\n  },\n  __self: this\n}, new Intl.DateTimeFormat(\"en-GB\", {\n  year: \"numeric\",\n  month: \"long\",\n  day: \"2-digit\"\n}).format(new Date(props.date))), React.createElement(\"td\", {\n  className: props.bug.completed ? 'completed' : '',\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 41\n  },\n  __self: this\n}, props.bug.members), React.createElement(\"td\", {\n  className: props.bug.completed ? 'completed' : '',\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 42\n  },\n  __self: this\n}, props.bug.priority), React.createElement(\"td\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 44\n  },\n  __self: this\n}, React.createElement(Link, {\n  to: \"/edit/\" + props.bug._id,\n  className: \"btn btn-success\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 45\n  },\n  __self: this\n}, \"Edit \"), \" \", React.createElement(\"button\", {\n  className: \"btn btn-danger\",\n  onClick: () => {\n    props.deleteBug(props.bug._id);\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 45\n  },\n  __self: this\n}, \" Delete\")));\n\nexport default class BugList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      bugs: [],\n      query: '',\n      projects: []\n    };\n    this.searchQuery = this.searchQuery.bind(this);\n    this.deleteBug = this.deleteBug.bind(this);\n  }\n\n  componentDidMount() {\n    axios.get('http://localhost:4000/bugs/').then(response => {\n      this.setState({\n        bugs: response.data\n      });\n    }).then(axios.get('http://localhost:4000/projects').then(response => {\n      this.setState({\n        projects: response.data\n      });\n      console.log(\"Projects\", JSON.stringify(this.state.projects));\n    })).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  searchQuery(e) {\n    this.setState({\n      query: e.target.value\n    });\n  }\n\n  deleteBug(id) {\n    axios.delete('http://localhost:4000/bugs/' + id).then(response => {\n      console.log(response.data);\n    });\n    this.setState({\n      bugs: this.state.bugs.filter(el => el._id !== id)\n    });\n  } // bugList() {\n  //     return this.state.bugs.map((currentBug) =>{\n  //         return <Bug bug={currentBug}\n  //                     deleteBug={this.deleteBug}\n  //                     key={currentBug._id}\n  //                     date={currentBug.date.substring(0,10)} />;\n  //     });\n  // }\n\n\n  render() {\n    console.log(\"Bugs projects \", this.state.projects);\n    console.log(\"Bugs component \" + JSON.stringify(this.state.bugs));\n    let findQuery = this.state.bugs.filter(i => i.description.toLowerCase().indexOf(this.state.query.toLowerCase()) !== -1);\n    let newArr = [];\n    let getProjectName = this.state.projects.filter(i => {\n      this.state.bugs.filter(j => {\n        if (i._id === j.projects) {\n          return React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 122\n            },\n            __self: this\n          }, i.projectName);\n        }\n      });\n    });\n    console.log(\"New arr\", newArr);\n    console.log(\"GetProject Name\", getProjectName);\n    console.log(\"Query: \" + this.state.query);\n    console.log(\"Date: \", this.state.projects.dateCreated); //console.log(\"Found query \" + JSON.stringify(findQuery));\n\n    return React.createElement(\"div\", {\n      className: \"container-fluid\",\n      style: {\n        overflow: \"scroll\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(\"ol\", {\n      className: \"breadcrumb mb-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      className: \"breadcrumb-item active\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, \"Bugs list\"))), React.createElement(\"input\", {\n      className: \"form-control mr-sm-2\",\n      onChange: this.searchQuery,\n      type: \"text\",\n      placeholder: \"Search descriptions...\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }), React.createElement(\"table\", {\n      className: \"table\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, \"Description\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, \"Deadline\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, \"Assignee\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, \"Priority\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, \"Actions\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, findQuery.map(currentBug => {\n      return React.createElement(Bug, {\n        bug: currentBug,\n        deleteBug: this.deleteBug,\n        key: currentBug._id,\n        date: currentBug.date,\n        projectName: getProjectName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      });\n    }))));\n  }\n\n} //","map":{"version":3,"sources":["/home/jasonw/Desktop/React/bugtracker/src/components/bugtrack/buglist.component.js"],"names":["React","Component","Link","axios","jwt_decode","setAuthToken","setCurrentUser","logoutUser","store","localStorage","jwtToken","token","decoded","dispatch","currentTime","Date","now","exp","window","location","href","Bug","props","projectName","bug","completed","description","Intl","DateTimeFormat","year","month","day","format","date","members","priority","_id","deleteBug","BugList","constructor","state","bugs","query","projects","searchQuery","bind","componentDidMount","get","then","response","setState","data","console","log","JSON","stringify","catch","error","e","target","value","id","delete","filter","el","render","findQuery","i","toLowerCase","indexOf","newArr","getProjectName","j","dateCreated","overflow","map","currentBug"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport \"../bugtrack/bugs.css\"\nimport jwt_decode from \"jwt-decode\";\nimport setAuthToken from \"../../utils/setAuthToken\";\nimport { setCurrentUser, logoutUser } from \"../../actions/authActions\";\nimport store from \"../../store\";\n\nif (localStorage.jwtToken) {\n    // Set auth token header auth\n    const token = localStorage.jwtToken;\n    setAuthToken(token);\n    // Decode token and get user info and exp\n    const decoded = jwt_decode(token);\n    // Set user and isAuthenticated\n    store.dispatch(setCurrentUser(decoded));\n  // Check for expired token\n    const currentTime = Date.now() / 1000; // to get in milliseconds\n    if (decoded.exp < currentTime) {\n      // Logout user\n      store.dispatch(logoutUser());\n      // Redirect to login\n      window.location.href = \"/login\";\n    }\n  }\n\nconst Bug = props => (\n        \n    <tr>\n        {/* <td className={props.bug.completed ? 'completed' : ''}>{props.projectName}</td> */}\n        {props.projectName}\n        <td className={props.bug.completed ? 'completed' : ''}>{props.bug.description}</td>\n        <td className={props.bug.completed ? 'completed' : ''}>\n            {new Intl.DateTimeFormat(\"en-GB\", {\n                year: \"numeric\",\n                month: \"long\",\n                day: \"2-digit\"\n            }).format(new Date(props.date))}\n        </td>\n        <td className={props.bug.completed ? 'completed' : ''}>{props.bug.members}</td>\n        <td className={props.bug.completed ? 'completed' : ''}>{props.bug.priority}</td>\n        \n        <td>\n            <Link to={\"/edit/\"+props.bug._id} className=\"btn btn-success\" >Edit </Link> <button className=\"btn btn-danger\" onClick={() => { props.deleteBug(props.bug._id) }}> Delete</button> \n        </td>\n    </tr>\n)\nexport default class BugList extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            bugs: [],\n            query: '',\n            projects: []\n        };\n        this.searchQuery = this.searchQuery.bind(this);\n        this.deleteBug = this.deleteBug.bind(this);\n    \n    }\n\n    \n    componentDidMount() {\n        axios.get('http://localhost:4000/bugs/')\n            .then(response => {\n                this.setState({\n                    bugs: response.data});\n            \n            }).then(axios.get('http://localhost:4000/projects')\n                .then(response => {\n                    this.setState({\n                        projects: response.data});\n                    console.log(\"Projects\", JSON.stringify(this.state.projects));\n                }))\n            .catch(function(error) {\n                console.log(error)\n            })\n    }\n\n\n    searchQuery(e) {\n        this.setState({\n            query: e.target.value\n            \n        })\n    }\n\n\n    deleteBug(id) {\n        axios.delete('http://localhost:4000/bugs/'+id) \n            .then(response => {console.log(response.data)});\n\n        this.setState({\n            bugs: this.state.bugs.filter(el => el._id !== id)\n        })\n    }\n\n    // bugList() {\n    //     return this.state.bugs.map((currentBug) =>{\n\n    //         return <Bug bug={currentBug}\n    //                     deleteBug={this.deleteBug}\n    //                     key={currentBug._id}\n    //                     date={currentBug.date.substring(0,10)} />;\n    //     });\n    // }\n    \n    render() {\n        console.log(\"Bugs projects \",this.state.projects);\n        console.log(\"Bugs component \" + JSON.stringify(this.state.bugs));\n\n        let findQuery = this.state.bugs.filter(\n            i => i.description.toLowerCase().indexOf(this.state.query.toLowerCase()) !== -1);\n        \n        \n        let newArr = [];\n\n        let getProjectName = this.state.projects.filter(i => {\n            this.state.bugs.filter(j => {\n                if(i._id === j.projects) {\n                    return <td>{i.projectName}</td>\n                }     \n            })\n        });\n\n        console.log(\"New arr\", newArr);\n\n        console.log(\"GetProject Name\", getProjectName);\n        console.log(\"Query: \" + this.state.query);\n        console.log(\"Date: \",this.state.projects.dateCreated);\n        \n        //console.log(\"Found query \" + JSON.stringify(findQuery));\n        \n        return (\n            <div className=\"container-fluid\" style={{overflow:\"scroll\"}}>\n                <ol className=\"breadcrumb mb-3\">\n                    <li className=\"breadcrumb-item active\"><strong>Bugs list</strong></li>\n                </ol>\n                \n                <input\n                    className=\"form-control mr-sm-2\"\n                    onChange={this.searchQuery}\n                    type=\"text\"\n                    placeholder=\"Search descriptions...\"\n                />\n\n                <table className=\"table\">\n                        <thead>\n                            <tr>\n                                \n                                <th>Description</th>\n                                <th>Deadline</th>\n                                <th>Assignee</th>\n                                <th>Priority</th>\n                                <th>Actions</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                    {findQuery.map((currentBug) =>{\n                            return <Bug bug={currentBug}\n                                        deleteBug={this.deleteBug}\n                                        key={currentBug._id}\n                                        date={currentBug.date} \n                                projectName={getProjectName}\n                                />\n            })}\n                \n                        </tbody>\n\n\n                    </table>\n            </div>\n        )\n    }\n}\n// "]},"metadata":{},"sourceType":"module"}