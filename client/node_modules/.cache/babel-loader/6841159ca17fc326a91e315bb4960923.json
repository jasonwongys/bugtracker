{"ast":null,"code":"var _jsxFileName = \"/home/jasonw/Desktop/React/bugtracker/src/components/projects/projectlist.js\";\nimport React, { Component, Link } from 'react';\nimport axios from 'axios'; //import jwt from 'jsonwebtokens'\n\nconst Project = props => React.createElement(\"tr\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7\n  },\n  __self: this\n}, React.createElement(\"td\", {\n  className: props.project.completed ? 'completed' : '',\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 8\n  },\n  __self: this\n}, props.project.projectName), React.createElement(\"td\", {\n  className: props.project.completed ? 'completed' : '',\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 9\n  },\n  __self: this\n}, props.project.description), React.createElement(\"td\", {\n  className: props.project.completed ? 'completed' : '',\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10\n  },\n  __self: this\n}, props.project.members), React.createElement(\"td\", {\n  className: props.project.completed ? 'completed' : '',\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11\n  },\n  __self: this\n}, props.date));\n\nexport default class Projects extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      projects: [],\n      query: ''\n    };\n    this.searchQuery = this.searchQuery.bind(this);\n    this.deleteProject = this.deleteProject.bind(this);\n  }\n\n  componentDidMount() {\n    axios.get('http://localhost:4000/projects/projectsList').then(response => {\n      this.setState({\n        projects: response.data\n      });\n      console.log(\"Did Mount here\" + response.data);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  } //     componentDidUpdate() {\n  //         axios.get('http://localhost:4000/projects/projectsList')\n  //         .then(response => {\n  //             this.setState({\n  //                 projects: response.data});\n  //                 //console.log(\"Did Update done\" + response.data)\n  //         })\n  //         .catch(function(error) {\n  //             console.log(error)\n  //         })\n  // }\n\n\n  searchQuery(e) {\n    this.setState({\n      query: e.target.value\n    });\n  }\n\n  deleteProject(id) {\n    axios.delete('http://localhost:4000/projects/' + id).then(response => {\n      console.log(response.data);\n    });\n    this.setState({\n      projects: this.state.projects.filter(el => el._id !== id)\n    });\n  } // projectList() {\n  //     return this.state.projects.map((currentProject) =>{\n  //         return <Project project={currentProject}\n  //                     //deleteBug={this.deleteBug}\n  //                     key={currentProject._id}\n  //                     date={currentProject.dateCreated.substring(0,10)}\n  //                     />\n  //     });\n  // }\n\n\n  render() {\n    let findQuery = this.state.projects.filter(i => i.description.toLowerCase().indexOf(this.state.query.toLowerCase()) !== -1);\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \" Projects \"), React.createElement(\"input\", {\n      onChange: this.searchQuery,\n      type: \"text\",\n      placeholder: \"Search projects...\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }), React.createElement(\"table\", {\n      className: \"table table-striped\",\n      style: {\n        marginTop: 20\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \"Project Name\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"Description\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \"Members\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"Date Created\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, findQuery.map(currentProject => {\n      return React.createElement(Project, {\n        project: currentProject,\n        deleteProject: this.deleleProject,\n        key: currentProject._id,\n        date: currentProject.dateCreated.substring(0, 10),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      });\n    }))));\n  }\n\n}","map":{"version":3,"sources":["/home/jasonw/Desktop/React/bugtracker/src/components/projects/projectlist.js"],"names":["React","Component","Link","axios","Project","props","project","completed","projectName","description","members","date","Projects","constructor","state","projects","query","searchQuery","bind","deleteProject","componentDidMount","get","then","response","setState","data","console","log","catch","error","e","target","value","id","delete","filter","el","_id","render","findQuery","i","toLowerCase","indexOf","marginTop","map","currentProject","deleleProject","dateCreated","substring"],"mappings":"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","sourcesContent":["import React, { Component, Link } from 'react'\n\nimport axios from 'axios';\n//import jwt from 'jsonwebtokens'\n\nconst Project = props => (\n    <tr>\n    <td className={props.project.completed ? 'completed' : ''}>{props.project.projectName}</td>\n        <td className={props.project.completed ? 'completed' : ''}>{props.project.description}</td>\n        <td className={props.project.completed ? 'completed' : ''}>{props.project.members}</td>\n        <td className={props.project.completed ? 'completed' : ''}>{props.date}</td>\n        \n        {/* <td>\n        <Link to={\"/editProj/\"+props.project._id} >Edit </Link> | \n                <a href=\"#\" onClick={() => { props.deleteProject(props.project._id) }}> delete</a>\n        </td> */}\n        \n        \n    </tr>\n)\nexport default class Projects extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            projects: [],\n            query: ''\n        };\n\n        this.searchQuery = this.searchQuery.bind(this);\n        this.deleteProject = this.deleteProject.bind(this);\n    }\n    componentDidMount() {\n        axios.get('http://localhost:4000/projects/projectsList')\n            .then(response => {\n                this.setState({\n                    projects: response.data});\n                    console.log(\"Did Mount here\" + response.data)\n            })\n            .catch(function(error) {\n                console.log(error)\n            })\n\n    }\n\n//     componentDidUpdate() {\n//         axios.get('http://localhost:4000/projects/projectsList')\n//         .then(response => {\n//             this.setState({\n//                 projects: response.data});\n//                 //console.log(\"Did Update done\" + response.data)\n                \n//         })\n//         .catch(function(error) {\n//             console.log(error)\n\n//         })\n\n// }\n\n    searchQuery(e) {\n        this.setState({\n            query: e.target.value\n        })\n    }\n\n    deleteProject(id) {\n        axios.delete('http://localhost:4000/projects/'+id) \n            .then(response => {console.log(response.data)});\n\n        this.setState({\n            projects: this.state.projects.filter(el => el._id !== id)\n        })\n    }\n\n    // projectList() {\n    //     return this.state.projects.map((currentProject) =>{\n\n    //         return <Project project={currentProject}\n    //                     //deleteBug={this.deleteBug}\n    //                     key={currentProject._id}\n    //                     date={currentProject.dateCreated.substring(0,10)}\n    //                     />\n    //     });\n    // }\n    \n    render() {\n\n        let findQuery = this.state.projects.filter(\n                i => i.description.toLowerCase().indexOf(this.state.query.toLowerCase()) !== -1);\n\n        return (\n            <div className=\"container\">\n                <h3> Projects </h3>\n                <input\n                    onChange={this.searchQuery}\n                    type=\"text\"\n                    placeholder=\"Search projects...\"\n                />\n                <table className=\"table table-striped\"\n                    style={{marginTop: 20 }}>\n                        <thead>\n                            <tr>\n                                <th>Project Name</th>   \n                                <th>Description</th>\n                                <th>Members</th>\n                                <th>Date Created</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {findQuery.map((currentProject) =>{\n                                return <Project project={currentProject}\n                                            deleteProject={this.deleleProject}\n                                            key={currentProject._id}\n                                            date={currentProject.dateCreated.substring(0,10)}\n                            />\n                })}\n                        </tbody>\n\n                    </table>\n            </div>\n        )\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}