{"ast":null,"code":"var _jsxFileName = \"/home/jasonw/Desktop/React/bugtracker/src/components/bugtrack/search.component.js\";\nimport React, { Component } from 'react';\nexport default class Search extends Component {\n  constructor(props) {\n    super(props);\n\n    this.fetchSearchResults = (updatedPageNo = '', query) => {\n      const pageNumber = updatedPageNo ? `&page=${updatedPageNo}` : ''; // By default the limit of results is 20\n\n      const searchUrl = `https://pixabay.com/api/?key=12413278-79b713c7e196c7a3defb5330e&q=${query}${pageNumber}`;\n\n      if (this.cancel) {\n        // Cancel the previous request before making a new request\n        this.cancel.cancel();\n      } // Create a new CancelToken\n\n\n      this.cancel = axios.CancelToken.source();\n      axios.get(searchUrl, {\n        cancelToken: this.cancel.token\n      }).then(res => {\n        const resultNotFoundMsg = !res.data.hits.length ? 'There are no more search results. Please try a new search.' : '';\n        this.setState({\n          results: res.data.hits,\n          message: resultNotFoundMsg,\n          loading: false\n        });\n      }).catch(error => {\n        if (axios.isCancel(error) || error) {\n          this.setState({\n            loading: false,\n            message: 'Failed to fetch results.Please check network'\n          });\n        }\n      });\n    };\n\n    this.handleOnInputChange = event => {\n      const query = event.target.value;\n      this.setState({\n        query,\n        loading: true,\n        message: ''\n      });\n    };\n\n    this.state = {\n      query: '',\n      results: {},\n      loading: false,\n      message: ''\n    };\n    this.cancel = '';\n    this.handleOnInputChange = this.handleOnInputChange.bind();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"search-label\",\n      htmlFor: \"search-input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      value: \"\",\n      id: \"search-input\",\n      placeholder: \"Search...\",\n      onChange: this.handleOnInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["/home/jasonw/Desktop/React/bugtracker/src/components/bugtrack/search.component.js"],"names":["React","Component","Search","constructor","props","fetchSearchResults","updatedPageNo","query","pageNumber","searchUrl","cancel","axios","CancelToken","source","get","cancelToken","token","then","res","resultNotFoundMsg","data","hits","length","setState","results","message","loading","catch","error","isCancel","handleOnInputChange","event","target","value","state","bind","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,eAAe,MAAMC,MAAN,SAAqBD,SAArB,CAA+B;AAE1CE,EAAAA,WAAW,CAAEC,KAAF,EAAU;AACvB,UAAOA,KAAP;;AADuB,SAerBC,kBAfqB,GAeA,CAACC,aAAa,GAAG,EAAjB,EAAqBC,KAArB,KAAgC;AACjD,YAAMC,UAAU,GAAGF,aAAa,GAAI,SAAQA,aAAc,EAA1B,GAA8B,EAA9D,CADiD,CAEjD;;AACA,YAAMG,SAAS,GAAI,qEAAoEF,KAAM,GAAEC,UAAW,EAA1G;;AACA,UAAI,KAAKE,MAAT,EAAiB;AACb;AACA,aAAKA,MAAL,CAAYA,MAAZ;AACH,OAPgD,CAQjD;;;AACA,WAAKA,MAAL,GAAcC,KAAK,CAACC,WAAN,CAAkBC,MAAlB,EAAd;AACAF,MAAAA,KAAK,CACAG,GADL,CACSL,SADT,EACoB;AACZM,QAAAA,WAAW,EAAE,KAAKL,MAAL,CAAYM;AADb,OADpB,EAIKC,IAJL,CAIWC,GAAD,IAAS;AACX,cAAMC,iBAAiB,GAAG,CAACD,GAAG,CAACE,IAAJ,CAASC,IAAT,CAAcC,MAAf,GACpB,4DADoB,GAEpB,EAFN;AAGA,aAAKC,QAAL,CAAc;AACVC,UAAAA,OAAO,EAAEN,GAAG,CAACE,IAAJ,CAASC,IADR;AAEVI,UAAAA,OAAO,EAAEN,iBAFC;AAGVO,UAAAA,OAAO,EAAE;AAHC,SAAd;AAKH,OAbL,EAcKC,KAdL,CAcYC,KAAD,IAAW;AACd,YAAIjB,KAAK,CAACkB,QAAN,CAAeD,KAAf,KAAyBA,KAA7B,EAAoC;AAChC,eAAKL,QAAL,CAAc;AACVG,YAAAA,OAAO,EAAE,KADC;AAEVD,YAAAA,OAAO,EAAE;AAFC,WAAd;AAIH;AACJ,OArBL;AAsBH,KA/CoB;;AAAA,SAgDrBK,mBAhDqB,GAgDEC,KAAD,IAAW;AAC7B,YAAMxB,KAAK,GAAGwB,KAAK,CAACC,MAAN,CAAaC,KAA3B;AACQ,WAAKV,QAAL,CAAc;AAAEhB,QAAAA,KAAF;AAASmB,QAAAA,OAAO,EAAE,IAAlB;AAAwBD,QAAAA,OAAO,EAAE;AAAjC,OAAd;AACX,KAnDoB;;AAEvB,SAAKS,KAAL,GAAa;AACZ3B,MAAAA,KAAK,EAAE,EADK;AAESiB,MAAAA,OAAO,EAAE,EAFlB;AAGSE,MAAAA,OAAO,EAAE,KAHlB;AAISD,MAAAA,OAAO,EAAE;AAJlB,KAAb;AAOM,SAAKf,MAAL,GAAc,EAAd;AAEA,SAAKoB,mBAAL,GAA2B,KAAKA,mBAAL,CAAyBK,IAAzB,EAA3B;AAEH;;AAwCJC,EAAAA,MAAM,GAAG;AACR,WACC;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIC;AAAO,MAAA,SAAS,EAAC,cAAjB;AAAgC,MAAA,OAAO,EAAC,cAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEC;AACC,MAAA,IAAI,EAAC,MADN;AAEC,MAAA,KAAK,EAAC,EAFP;AAGC,MAAA,EAAE,EAAC,cAHJ;AAIC,MAAA,WAAW,EAAC,WAJb;AAKmB,MAAA,QAAQ,EAAE,KAAKN,mBALlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFD,CAJD,CADD;AAmBA;;AA3E4C","sourcesContent":["import React, { Component } from 'react'\nexport default class Search extends Component {\n\n    constructor( props ) {\n\t\tsuper( props );\n\t\tthis.state = {\n\t\t\tquery: '',\n                        results: {},\n                        loading: false,\n                        message: '',\n        };\n\n        this.cancel = '';\n        \n        this.handleOnInputChange = this.handleOnInputChange.bind();\n\n    }\n\n    fetchSearchResults = (updatedPageNo = '', query ) => {\n        const pageNumber = updatedPageNo ? `&page=${updatedPageNo}` : '';\n        // By default the limit of results is 20\n        const searchUrl = `https://pixabay.com/api/?key=12413278-79b713c7e196c7a3defb5330e&q=${query}${pageNumber}`;\n        if (this.cancel) {\n            // Cancel the previous request before making a new request\n            this.cancel.cancel();\n        }\n        // Create a new CancelToken\n        this.cancel = axios.CancelToken.source();\n        axios\n            .get(searchUrl, {\n                cancelToken: this.cancel.token,\n            })\n            .then((res) => {\n                const resultNotFoundMsg = !res.data.hits.length\n                    ? 'There are no more search results. Please try a new search.'\n                    : '';\n                this.setState({\n                    results: res.data.hits,\n                    message: resultNotFoundMsg,\n                    loading: false,\n                });\n            })\n            .catch((error) => {\n                if (axios.isCancel(error) || error) {\n                    this.setState({\n                        loading: false,\n                        message: 'Failed to fetch results.Please check network',\n                    });\n                }\n            });\n    };\n    handleOnInputChange = (event) => {\n        const query = event.target.value;\n                this.setState({ query, loading: true, message: ''  } );\n    };\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"container\">\n\t\t\t\t{/*Heading*/}\n\t\t\t\n\t\t\t\t{/*Search Input*/}\n\t\t\t\t<label className=\"search-label\" htmlFor=\"search-input\">\n                \n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tvalue=\"\"\n\t\t\t\t\t\tid=\"search-input\"\n\t\t\t\t\t\tplaceholder=\"Search...\"\n                        onChange={this.handleOnInputChange}\n\t\t\t\t\t/>\n\t\t\t\t\t\n\t\t\t\t</label>\n\t\t\t\t\n\t\t\t</div>\n\t\t\t)\n\t}\n}"]},"metadata":{},"sourceType":"module"}